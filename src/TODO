[] Redex the initial semantics

HTDP:
[] How should short-circuiting booleans work?
[] allow hyphens in identifiers

Cleanup:
[x] make helper for id-parsing
[] and str-parsing in pyret.rkt
[] decide on a line length and enforce
[] ordering of things in grammar vs pyret.rkt
[] consistent naming in grammar for lists of things
[] figure out what define-syntax is less boilerplate
[] s-data and s-dot should agree on symbol vs. string
[] clean up runtime.rkt into sanity
[] stop using typed racket except for data definitions
[] figure out duplicate identifiers with (define)
[] can we use ()? instead of multiple arms in grammar.rkt?
[] bug report on module docs for language definitions
[] bug report on resolved-module-path? docs

[] application should check type better?

[x] syntax for rudimentary types ::
[] checking for rudimentary types

[] Escape into Racket with peglegs:
    !(display (current-namespace))!
  - wrapping where possible?
[] Racket.builtin for convenient libraries
  - e.g. Racket.string-append(pyval, pyval)
  - unwrapping and wrapping of pyret constants to Racket #'s and str's

[] Think MOAR about self-reference/method invocation
  - first class methods
