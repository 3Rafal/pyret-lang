#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 687 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 27 #"\"../lang/compile-pyret.rkt\""
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 20 #"\"../lang/parser.rkt\""
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 9 #"         "
0 0 19 3 20 #"\"../lang/values.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"dynamic-require"
0 0 22 3 1 #" "
0 0 19 3 19 #"\"../lang/pyret.rkt\""
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"ns"
0 0 22 3 2 #" ("
0 0 14 3 17 #"module->namespace"
0 0 22 3 1 #" "
0 0 19 3 19 #"\"../lang/pyret.rkt\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 72
(
 #";; note - using eval-syntax below misses an important \"enrichment\""
 #" step:"
) 0 0 22 29 1 #"\n"
0 0 17 3 136
(
 #";; http://docs.racket-lang.org/reference/eval.html?q=eval-syntax&q=e"
 #"val-syntax&q=%23%25datum#(def._((quote._~23~25kernel)._eval-syntax))"
) 0 0 22 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 22 29 1 #"\n"
0 0 17 3 43 #";; NB(joe):  I have no idea what that means"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"pyret-eval"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"eval"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 11 #"compile-str"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 2 #"ns"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"compile-str"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 13 #"compile-pyret"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 14 3 4 #"eval"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 10 #"get-syntax"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"cmdline\""
0 0 22 3 2 #" ("
0 0 14 3 17 #"open-input-string"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 14 3 2 #"ns"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #" "
0 0 14 3 8 #"expected"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"pyret-eval"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 2 #") "
0 0 14 3 8 #"expected"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pyret-fail"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #" "
0 0 14 3 8 #"expected"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 16 #"check-not-equal?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"pyret-eval"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 2 #") "
0 0 14 3 8 #"expected"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 1 #" "
0 0 14 3 7 #"message"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 9 #"check-exn"
0 0 22 3 2 #" ("
0 0 14 3 6 #"regexp"
0 0 22 3 2 #" ("
0 0 14 3 12 #"regexp-quote"
0 0 22 3 1 #" "
0 0 14 3 7 #"message"
0 0 22 3 4 #")) ("
0 0 15 3 6 #"lambda"
0 0 22 3 5 #" () ("
0 0 14 3 10 #"pyret-eval"
0 0 22 3 1 #" "
0 0 14 3 3 #"str"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-num"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"p-num"
0 0 22 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #" ("
0 0 14 3 4 #"none"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-str"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"p-str"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #" ("
0 0 14 3 4 #"none"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-num"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-num"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 3 #"ten"
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-num"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 16 #"check-pyret-fail"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 20 #"\"fun f(): 2 end f()\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 22 #"\"fun f(x): x end f(2)\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 49 #"\"fun f(x): x end fun g(x): x end f(2) g(10) f(2)\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 41 #"\"fun f(x): fun g(x): x end g(x) end f(5)\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 16 #"check-pyret-fail"
0 0 22 3 1 #" "
0 0 19 3 22 #"\"fun f(x): x end f(3)\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"{}\""
0 0 22 3 2 #" ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 4 #"none"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"'5'\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"mk-str"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"5\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"{x:5}\""
0 0 22 3 2 #" ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 4 #"none"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"[]\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"p-list"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 3 #") ("
0 0 14 3 4 #"none"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"seal({}, [])\""
0 0 22 3 2 #" ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 20 #"\"seal({x:5}, ['x'])\""
0 0 22 3 2 #" ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"x\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 38 #"\"seal(seal({x:5, y:2}, ['y']), ['y'])\""
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 2 #"(("
0 0 19 3 3 #"\"x\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"five"
0 0 22 3 3 #") ("
0 0 19 3 3 #"\"y\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"two"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 49 #"\"seal(seal({x:5, y:2, z:10}, ['y', 'z']), ['y'])\""
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 2 #"(("
0 0 19 3 3 #"\"x\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"five"
0 0 22 3 3 #") ("
0 0 19 3 3 #"\"y\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"two"
0 0 22 3 3 #") ("
0 0 19 3 3 #"\"z\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ten"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 36 #"\"seal({x:5, y:2, z:10}, ['y', 'z'])\""
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 8 #"p-object"
0 0 22 3 2 #" ("
0 0 14 3 3 #"set"
0 0 22 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 22 3 1 #" "
0 0 19 3 3 #"\"z\""
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-hash"
0 0 22 3 1 #" "
0 0 20 3 1 #"`"
0 0 22 3 2 #"(("
0 0 19 3 3 #"\"x\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 4 #"five"
0 0 22 3 3 #") ("
0 0 19 3 3 #"\"y\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"two"
0 0 22 3 3 #") ("
0 0 19 3 3 #"\"z\""
0 0 22 3 1 #" "
0 0 26 3 1 #"."
0 0 22 3 1 #" "
0 0 26 3 1 #","
0 0 14 3 3 #"ten"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 38 #"\"seal(seal({x:5, y:2}, ['y']), ['x'])\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"seal:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 20 #"\"seal({x:5}, ['y'])\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"seal:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 18 #"\"seal({x:5}, 'y')\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"seal:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 17 #"\"seal({}, ['y'])\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"seal:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 16 #"\"seal(5, ['y'])\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"seal:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 24 #"\"fun foo(): 5 end foo()\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 19 #"\"seal({x:5}, []).x\""
0 0 22 3 1 #" "
0 0 19 3 12 #"\"get-field:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 22 #"\"seal({x:5}, ['x']).x\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"{x:5}.x\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 9 #"\"{x:5}.y\""
0 0 22 3 1 #" "
0 0 19 3 12 #"\"get-field:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 40 #"\"seal(seal({x:5, y:5}, ['y']), ['y']).x\""
0 0 22 3 1 #" "
0 0 19 3 12 #"\"get-field:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 45 #"\"seal(seal({x:5, y:5}, ['x', 'y']), ['y']).y\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 50 #"\"seal(seal({x:5, y:5, z:5}, ['x', 'y']), ['y']).z\""
0 0 22 3 1 #" "
0 0 19 3 12 #"\"get-field:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 28 #"\"fun f(x): x = 2 x end f(1)\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 34 #"\"fun f(x): x = 2 x = 5 x end f(1)\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 15 #"check-pyret-exn"
0 0 22 3 1 #" "
0 0 19 3 28 #"\"fun f(x): y = 2 x end f(1)\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"set!:\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 45 #"\"fun f(x): fun g(): x = 2 end g() x end f(1)\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 47 #"\"fun f(x): fun g(x): x = 2 end g(1) x end f(5)\""
0 0 22 3 1 #" "
0 0 14 3 4 #"five"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 11 #"check-pyret"
0 0 22 3 1 #" "
0 0 19 3 14 #"\"fun fundo(o):"
0 0 19 29 1 #"\n"
0 0 19 3 25 #"                fun f(x):"
0 0 19 29 1 #"\n"
0 0 19 3 36 #"                  fun g(): x = 2 end"
0 0 19 29 1 #"\n"
0 0 19 3 32 #"                  fun h(): x end"
0 0 19 29 1 #"\n"
0 0 19 3 31 #"                  {g: g, h: h} "
0 0 19 29 1 #"\n"
0 0 19 3 19 #"                end"
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                o = f(1)"
0 0 19 29 1 #"\n"
0 0 19 3 21 #"                o.g()"
0 0 19 29 1 #"\n"
0 0 19 3 21 #"                o.h()"
0 0 19 29 1 #"\n"
0 0 19 3 18 #"              end "
0 0 19 29 1 #"\n"
0 0 19 3 24 #"              fundo({})\""
0 0 22 3 1 #" "
0 0 14 3 3 #"two"
0 0 22 3 1 #")"
0           0
